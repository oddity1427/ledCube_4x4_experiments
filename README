MOTIVE:
This project was the confluence of a few different ideas. For a long time I felt like I needed to build a LED cube both because it is fun and interesting, but also because it seems like almost a required project as an electronics student and enthusiast. I never got around to it before, but building one coincided with an interesting way to apply another more pressing project that I had had in mind.I wanted to dig into working with AVR in programming microcontrollers as opposed to leaning on a platform and IDE like arduino. While it is very simple and easy to realize ideas, that is also its limitation. I experienced programming in a more pure form of C in the last semester and I wanted a way to tinker around with that and get my bearings before moving on to other projects. The simple LED cube allowed a reasonably complex platform to work with physically that would still be interesting, but allow me to focus on the way I was writing and implementing/uploading the code as opposed to any algorithm or programming specific challenge that might come on another project.

STEPS:
There are several things that I want to accomplish through the course of this project. 
1) Build an 4 x 4 LED cube that is functional and able to interface with a microcontroller. Side goals of looking at varying construction methods that would make for the cleanest and best design in the future should I desire to go on to a larger model in the future.
2) Interface the LED cube with a standard arduino UNO for the baseline code and functionality. This is not a challenge at all but should provide a good baseline for what I want to implement and improve on later.
2.5) Build an equivalent arduino with an ATmega328 IC and some components and reconnect that to the cube with the same arduino code as before. This ensures that I do not tie up an arduino in a project that is ultimately not that important and doesnt warrant it, but also lets the whole project become more self-contained.
3)Write equivalent code in basic C without any of the arduino functionality and upload it to the ATmega328. More to get used to the toolchain and the steps for programming the chip than a deep dive into the funtionality of the 328, but this is basically just a warm up project. ** 
